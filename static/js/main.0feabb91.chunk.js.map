{"version":3,"sources":["components/Nav.tsx","components/Contacts.tsx","components/Header.tsx","components/Card.tsx","examples.ts","components/SectionList.tsx","components/Main.tsx","svg/rs_school_js.svg","components/Footer.tsx","App.tsx","index.tsx"],"names":["Nav","className","sections","map","section","href","Contacts","props","contacts","contact","prefix","Header","name","Card","toString","target","rel","title","technologies","desc","date","examples","SectionList","id","items","item","Main","projects","p","skills","education","Footer","src","rsLogo","alt","App","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"0+CAIaA,EAAgB,WACzB,OACI,qBAAKC,UAAU,MAAf,SACI,6BACKC,IAASC,KAAI,SAAAC,GAAO,OACjB,6BACI,mBAAGC,KAAI,WAAMD,GAAb,SAAyBA,KADpBA,WCJhBE,G,YAAmC,SAACC,GAC7C,OACI,oBAAIN,UAAU,WAAd,SACKO,IAASL,KAAI,SAAAM,GAAO,OACjB,6BACI,mBAAGJ,KAAMI,EAAT,SACI,mBAAGR,UAAU,SAAS,cAAY,OAAlC,4BADmBM,EAAMG,OAASD,IADjCA,UCHZE,EAAmB,WAC5B,OACI,yBAAQV,UAAU,SAAlB,UAEI,qBAAKA,UAAU,6BACf,6BAAKW,MACL,cAAC,EAAD,CAAUF,OAAO,eCRhBG,G,iBAA4B,SAACN,GACtC,OACI,wBAAQN,UAAU,OAAlB,SACI,oBAAGI,KAAME,EAAMF,KAAKS,WAAYC,OAAO,SAASC,IAAI,aAApD,UACI,6BAAKT,EAAMU,QACX,sBAAKhB,UAAU,kBAAf,UACI,gCACI,oBAAGA,UAAU,gBAAb,2BAA4CM,EAAMW,gBAClD,8CAAiBX,EAAMY,WAE3B,sBAAMlB,UAAU,aAAhB,SAA8BM,EAAMa,iBCd3CC,EAAW,CAAC,mEAAD,+0BCIXC,EAA0C,SAACf,GACpD,OACI,0BAASgB,GAAIhB,EAAMgB,GAAGT,WAAYb,UAAU,UAA5C,UACI,6BAAKM,EAAMgB,KACX,oBAAItB,UAAU,KAAd,SACKM,EAAMiB,MAAMrB,KAAI,SAAAsB,GAAI,OAAI,6BAA2BA,GAAlBA,EAAKX,qBCD1CY,EAAiB,WAC1B,OACI,uBAAMzB,UAAU,OAAhB,UACI,0BAASA,UAAU,gBAAnB,UACI,0BAASsB,GAAIrB,IAAS,GAAID,UAAU,UAApC,UACI,6BAAKC,IAAS,KACd,uKAIA,wQAKA,+HAIJ,0BAASqB,GAAIrB,IAAS,GAAID,UAAU,UAApC,UACI,6BAAKC,IAAS,KACd,iIACA,8BAAK,sBAAMD,UAAU,sBAAhB,SAAuCoB,EAAS,OACrD,8EACA,8BAAK,sBAAMpB,UAAU,sBAAhB,SAAuCoB,EAAS,OACrD,8EACA,8BAAK,sBAAMpB,UAAU,kBAAhB,SAAmCoB,EAAS,UAErD,0BAASE,GAAIrB,IAAS,GAAID,UAAU,UAApC,UACI,6BAAKC,IAAS,KACbyB,IAASxB,KAAI,SAAAyB,GAAC,OACX,cAAC,EAAD,CACIX,MAAOW,EAAEX,MACTZ,KAAMuB,EAAEvB,KACRc,KAAMS,EAAET,KACRD,aAAcU,EAAEV,aAChBE,KAAMQ,EAAER,MACHQ,EAAEvB,eAKvB,wBAAOJ,UAAU,cAAjB,UACI,cAAC,EAAD,CAAasB,GAAIrB,IAAS,GAAIsB,MAAOK,MACrC,cAAC,EAAD,CAAaN,GAAIrB,IAAS,GAAIsB,MAAOM,MACrC,0BAASP,GAAIrB,IAAS,GAAID,UAAU,UAApC,UACI,6BAAKC,IAAS,KACd,+FCvDL,G,MAAA,IAA0B,0CCK5B6B,EAAmB,WAC5B,OACI,yBAAQ9B,UAAU,SAAlB,UACI,mEACA,cAAC,EAAD,CAAUS,OAAO,WACjB,mBAAGL,KAAK,wBAAR,SACI,qBAAK2B,IAAKC,EAAQC,IAAI,yBCOvBC,EAXO,WAClB,OACI,sBAAKlC,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCRZmC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAG5BC,QAAQC,IAAR,wqc","file":"static/js/main.0feabb91.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../styles/Nav.scss'\r\nimport {sections} from '../content.json'\r\n\r\nexport const Nav: React.FC = () => {\r\n    return (\r\n        <nav className=\"Nav\">\r\n            <ul>\r\n                {sections.map(section =>\r\n                    <li key={section}>\r\n                        <a href={`#${section}`}>{section}</a>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport {contacts} from \"../content.json\";\r\nimport '../styles/Contacts.scss'\r\nimport {ContactProps} from '../interfaces/props'\r\n\r\nexport const Contacts: React.FC<ContactProps> = (props) => {\r\n    return (\r\n        <ul className='Contacts'>\r\n            {contacts.map(contact =>\r\n                <li key={contact}>\r\n                    <a href={contact} key={props.prefix + contact}>\r\n                        <i className='hidden' aria-hidden=\"true\">Contacts link</i>\r\n                    </a>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    )\r\n}","import React from 'react'\r\nimport '../styles/Header.scss'\r\n// import photo from '../img/photo.png'\r\nimport {name} from '../content.json'\r\nimport {Contacts} from \"./Contacts\";\r\n\r\nexport const Header: React.FC = () => {\r\n    return (\r\n        <header className='Header'>\r\n            {/*<img src={photo} alt=\"photo\" className='Header__img'/>*/}\r\n            <div className='Header__img Header__joke'/>\r\n            <h1>{name}</h1>\r\n            <Contacts prefix='header' />\r\n        </header>\r\n    )\r\n}","import React from 'react'\r\nimport {CardProps} from \"../interfaces/props\";\r\nimport '../styles/Card.scss'\r\n\r\nexport const Card: React.FC<CardProps> = (props) => {\r\n    return (\r\n        <figure className='Card'>\r\n            <a href={props.href.toString()} target='_blank' rel='noreferrer'>\r\n                <h4>{props.title}</h4>\r\n                <div className='Card__container'>\r\n                    <div>\r\n                        <p className='Card__primary'>Technologies: {props.technologies}</p>\r\n                        <p>Description: {props.desc}</p>\r\n                    </div>\r\n                    <span className='Card__date'>{props.date}</span>\r\n                </div>\r\n            </a>\r\n        </figure>\r\n    )\r\n}","export const examples = [\r\n`const arrayDiff = (a, b) => a.filter(v => !b.some(n => v === n))`,\r\n`const letters = {10: 'A', 11: 'B', 12: 'C', 13: 'D', 14: 'E', 15: 'F'}\r\n\r\nconst rgb = (...n) => {\r\n    return n.map(v => {\r\n        if (v > 255) v = 255\r\n        else if (v < 0) v = 0\r\n\r\n        return [\r\n            (Math.trunc(v / 16) < 10) \r\n                ? Math.trunc(v / 16) \r\n                : letters[Math.trunc(v / 16)],\r\n            (v % 16 < 10) ? v % 16 : letters[v % 16]\r\n        ].join('')\r\n    }).join('')\r\n}`,\r\n`fun isOnline(app: Application): Boolean {\r\n    val cm = app.getSystemService(CONNECTIVITY_SERVICE) as ConnectivityManager\r\n    val cp = cm.getNetworkCapabilities(cm.activeNetwork)\r\n\r\n    return cp != null && (\r\n        cp.hasTransport(NetworkCapabilities.TRANSPORT_CELLULAR) ||\r\n        cp.hasTransport(NetworkCapabilities.TRANSPORT_WIFI) ||\r\n        cp.hasTransport(NetworkCapabilities.TRANSPORT_ETHERNET)\r\n    )\r\n}`\r\n]","import React from 'react'\r\nimport {SectionListProps} from '../interfaces/props'\r\nimport '../styles/Section.scss'\r\n\r\nexport const SectionList: React.FC<SectionListProps> = (props) => {\r\n    return (\r\n        <section id={props.id.toString()} className='Section'>\r\n            <h3>{props.id}</h3>\r\n            <ul className='ul'>\r\n                {props.items.map(item => <li key={item.toString()}>{item}</li> )}\r\n            </ul>\r\n        </section>\r\n    )\r\n}","import React from 'react'\r\nimport {sections, skills, education, projects} from '../content.json'\r\nimport '../styles/Main.scss'\r\nimport '../styles/Section.scss'\r\nimport {Card} from './Card'\r\nimport {examples} from '../examples'\r\nimport {SectionList} from './SectionList'\r\n\r\nexport const Main: React.FC = () => {\r\n    return (\r\n        <main className='Main'>\r\n            <article className='Main__article'>\r\n                <section id={sections[0]} className='Section'>\r\n                    <h3>{sections[0]}</h3>\r\n                    <p>\r\n                        I am going to become a javascript frontend developer. I have a high learning ability,\r\n                        perseverance and desire to develop in this area.\r\n                    </p>\r\n                    <p>\r\n                        I enjoy creating mobile apps, playing sports and learning new things. Since childhood,\r\n                        Since childhood, it was easier for me to deal with electronics and computers. I love to\r\n                        disassemble, assemble and configure various equipment...\r\n                    </p>\r\n                    <p>\r\n                        I haven’t had a chance to work in IT yet, all projects were completed as a freelancer.\r\n                    </p>\r\n                </section>\r\n                <section id={sections[1]} className='Section'>\r\n                    <h3>{sections[1]}</h3>\r\n                    <p>Example of JS function, which subtracts one list from another and returns the result (codewars):</p>\r\n                    <pre><code className=\"language-javascript\">{examples[0]}</code></pre>\r\n                    <p>JS function to convert RGB to HEX (codewars):</p>\r\n                    <pre><code className=\"language-javascript\">{examples[1]}</code></pre>\r\n                    <p>Kotlin function to check online state in app:</p>\r\n                    <pre><code className=\"language-kotlin\">{examples[2]}</code></pre>\r\n                </section>\r\n                <section id={sections[2]} className='Section'>\r\n                    <h3>{sections[2]}</h3>\r\n                    {projects.map(p =>\r\n                        <Card\r\n                            title={p.title}\r\n                            href={p.href}\r\n                            desc={p.desc}\r\n                            technologies={p.technologies}\r\n                            date={p.date}\r\n                            key={p.href}\r\n                        />\r\n                    )}\r\n                </section>\r\n            </article>\r\n            <aside className='Main__aside'>\r\n                <SectionList id={sections[3]} items={skills} />\r\n                <SectionList id={sections[4]} items={education} />\r\n                <section id={sections[5]} className='Section'>\r\n                    <h3>{sections[5]}</h3>\r\n                    <p>My english knowledge level is A2 (Pre-Intermediate).</p>\r\n                </section>\r\n            </aside>\r\n        </main>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import React from 'react'\r\nimport '../styles/Footer.scss'\r\nimport {Contacts} from './Contacts'\r\nimport rsLogo from '../svg/rs_school_js.svg'\r\n\r\nexport const Footer: React.FC = () => {\r\n    return (\r\n        <footer className='Footer'>\r\n            <span>&copy; 2021, all rights reserved.</span>\r\n            <Contacts prefix='footer' />\r\n            <a href='https://rs.school/js/'>\r\n                <img src={rsLogo} alt=\"RS School logo\" />\r\n            </a>\r\n        </footer>\r\n    )\r\n}","import React from 'react'\r\nimport './App.scss'\r\nimport {Nav} from './components/Nav'\r\nimport {Header} from './components/Header'\r\nimport {Main} from './components/Main'\r\nimport {Footer} from './components/Footer'\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <div className='App'>\r\n            <Nav />\r\n            <Header />\r\n            <Main />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\nconsole.log(`\r\nСамопроверка по пунктам:\r\n\r\n+ верстка валидная: +10\r\n\r\n+ вёрстка семантическая: +20 (как минимум 11 элементов: main, header, footer, section, aside, article, figure, nav, \r\nh1, h3, h4)\r\n\r\n+ для оформления СV используются css-стили: +10 (они все через SCSS стилизованы так-то)\r\n\r\n+ контент размещается в блоке, который горизонтально центрируется на странице. Фоновый цвет, если он есть, \r\nтянется во всю ширину страницы: +10\r\n\r\n+ вёрстка адаптивная: ни на одном из разрешений экрана до 320px включительно не появляется горизонтальная полоса \r\nпрокрутки, при этом всё содержание страницы сохраняется: +10\r\n\r\n/*\r\nи да, на всякий случай: у примеров кода прокрутка появится при любом раскладе, это не косяк по факту\r\n*/\r\n\r\n+ есть меню. Ссылки в пунктах меню ведут на основные разделы CV. При кликах по пунктам меню реализована плавная \r\nпрокрутка по якорям. При уменьшении ширины экрана меню становится адаптивным: +10\r\n\r\n+ на странице СV присутствует изображение - фото или аватарка автора CV, пропорции изображения не искажены, у \r\nизображения есть атрибут alt (может быть пустым): +10\r\n\r\n+ контакты для связи и перечень навыков оформлены в виде списка ul > li: +10\r\n\r\n+ CV содержит контакты для связи, краткую информацию о себе, перечень навыков, информацию об образовании и уровне \r\nанглийского: +10\r\n\r\n/*\r\nперечень навыков делать отдельной секцией я счел не нужным, так как указал в \"о себе\" вкратце их и \r\nпривел список языков/фреймворков, так что считаю, что норм\r\n*/\r\n\r\n+ CV содержит пример вашего кода (например, решение задачи с сайта codewars) с подсветкой кода. Для подсветки кода \r\nможет использоваться js-библиотека, например, highlight.js: +10\r\n\r\n+ CV содержит изображения-ссылки на выполненные вами проекты. При клике по изображению страница проекта \r\nоткрывается в новой вкладке: +10\r\n\r\n/*\r\nне изображение (они довольно маленькие и смысла пихать туда огроменные превьюшки я \r\nне вижу), но фигурка с кратким описанием проекта, датами, названием и используемыми технологиями, так, что, думаю, \r\nсойдет... Тут по сути выбор: либо картинки без описания, либо текстовые плашки. Я выбрал 2 вариант, так \r\nчто сорян(\r\n*/\r\n\r\n+ CV выполнено на английском языке: +10\r\n\r\n+ выполнены требования к Pull Request: есть ссылка на задание, скриншот страницы СV, ссылка на деплой страницы CV на \r\nGitHub Pages, выполнена самооценка (самооценку расписываем по пунктам критериев оценки, указывая балл за каждый \r\nпункт): +10\r\n\r\n- есть видеорезюме автора CV на английском языке. Продолжительность видео 3-5 минут (±15 секунд). В описание \r\nвидео на YouTube добавлена его транскрипция на английском языке: 0\r\n\r\n+ качество выполнения CV не ниже чем в примерах CV, приведённых в материалах к заданию (это дополнительные 10 баллов, \r\nпоэтому некоторый субъективизм в оценке может присутствовать): +10\r\n\r\n/*\r\nдумаю, да, на мой субъективный взгляд, даже отбросив факт написания сего CV на React + TypeScript, что, несомненно, \r\nдобавило сложности, но все же... Так что да, думаю, учитывая перечисленные факторы, скомпенсировал отсутствие видоса \r\nна инглише за счет усложнения в целом...\r\n*/\r\n\r\nРезультат самопроверки: 150 (160 - 10)\r\n\r\n\r\n\r\nСсылка на исходный код: https://github.com/IIPEKOLICT/rsschool-cv/tree/react-cv/\r\nСсылка на репозиторий: https://github.com/IIPEKOLICT/rsschool-cv/\r\nСсылка на Pull Request: https://github.com/IIPEKOLICT/rsschool-cv/\r\n`)"],"sourceRoot":""}